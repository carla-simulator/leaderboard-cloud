---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submission-worker
  namespace: default
---
apiVersion: batch/v1
kind: Job
metadata:
  name: submission
spec:
  template:
    spec:
      serviceAccountName: submission-worker
      initContainers:
        - name: leaderboard-copy
          image: 342236305043.dkr.ecr.us-east-1.amazonaws.com/leaderboard-20-development:latest
          command: [ "sh", "-c", "cp -r /workspace/leaderboard/* /tmp/leaderboard-master/"]
          volumeMounts:
            - mountPath: /tmp/leaderboard-master
              name: leaderboard-master
        - name: scenario-copy
          image: 342236305043.dkr.ecr.us-east-1.amazonaws.com/leaderboard-20-development:latest
          command: [ "sh", "-c", "cp -r /workspace/scenario_runner/* /tmp/scenario-runner-master/"]
          volumeMounts:
            - mountPath: /tmp/scenario-runner-master
              name: scenario-runner-master
        - name: carla-root-copy
          image: 342236305043.dkr.ecr.us-east-1.amazonaws.com/leaderboard-20-development:latest
          command: [ "sh", "-c", "cp -r /workspace/CARLA/* /tmp/carla-root-master/"]
          volumeMounts:
            - mountPath: /tmp/carla-root-master
              name: carla-root-master
        - name: init-myservice
          image: busybox:1.28
          command: ['sh', '-c', 'mkdir -m 0777 -p /tmp/efs/$$session_id$$/simulator ; mkdir -m 0777 -p /tmp/efs/$$session_id$$/agent']
          volumeMounts:
            - mountPath: /tmp/efs
              name: efs-shared
      containers:
        - name: simulator
          image: 342236305043.dkr.ecr.us-east-1.amazonaws.com/leaderboard-20-simulator-development:latest
          command: ["/bin/bash", "-c"]
          args:
            - |
              echo "Starting CARLA server"
              ./CarlaUE4.sh -vulkan
              echo "Stopped CARLA server"
          env:
            - name: DISPLAY
              value: ":0.0"
            - name: OMP_PROC_BIND
              value: "FALSE"
            - name: OMP_NUM_THREADS
              value: "64"
            - name: SDL_VIDEODRIVER
              value: "x11"
          volumeMounts:
            - mountPath: /home/carla/CarlaUE4/Saved
              name: efs-shared
              subPath: $$session_id$$/simulator
            - mountPath: /tmp/.X11-unix
              name: x11
          securityContext:
            privileged: true
          resources:
            limits:
              nvidia.com/gpu: 1
        - name: logcopy
          image: amazon/aws-cli:latest
          command: ["/bin/bash", "-c"]
          args:
            - |
              while sleep 10 ; do
                if [ -f "/log/agent/.done" ]; then
                   aws s3 sync /log/ s3://$S3_BUCKET/$S3_KEY/
                   break
                fi
              done
          env:
            - name: S3_KEY
              value: 0 # TODO
            - name: S3_BUCKET
              value: 0 # TODO
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: s3-log-credentials
                  key: username
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-log-credentials
                  key: password
            - name: AWS_REGION
              value: us-east-2
          volumeMounts:
            - mountPath: /log
              name: efs-shared
              subPath: $$session_id$$
        - name: agent
          image: 342236305043.dkr.ecr.us-east-1.amazonaws.com/bm-586a194d-team-177:54a1db1b-d340-4de8-a25b-67aa756db0c6
          command: ["/bin/bash", "-c"]
          args:
            - |
              echo "Sourcing '${HOME}/agent_sources.sh'""
              source ${HOME}/.bashrc
              if [[ -f "${HOME}/agent_sources.sh" ]]; then
                source ${HOME}/agent_sources.sh
              fi
              bash /workspace/leaderboard/scripts/run_leaderboard.sh $CHALLENGE_TRACK_CODENAME $CHECKPOINT_ENDPOINT $RESUME
              exit 0

              LEADERBOARD_LOGS=/tmp/agent/leaderboard.log
              AGENT_RESULTS=/tmp/agent/agent_results.json
              MAX_IDLE=800

              file_age () {echo "$(($(date +%s) - $(stat -c %Y "$1" )))"} # Get the modification date of a file
              kill_cleanup () {pkill -9 'python|java|ros|publisher|catkin'} # Kill all possible remaining processes

              echo "Sleeping a bit to ensure CARLA is ready"
              sleep 60
              echo "Starting the agent"

              # To ensure the Leaderboard never blocks, run it in the background while monitoring the changes to the results
              bash /workspace/leaderboard/scripts/run_evaluation.sh |& tee $LEADERBOARD_LOGS &
              while sleep 60 ; do
                  if [ "$(file_age $LEADERBOARD_LOGS)" -gt "$MAX_IDLE" ]; then
                      echo "No new outputs generated for $LEADERBOARD_LOGS during $MAX_IDLE seconds. Exiting"
                      break
                  fi
                  if ! pgrep -f run_evaluation | egrep -q -v '^1$' ; then
                      echo "Detected that the leaderboard has finished. Exiting"
                      break
                  fi
              done

              sleep 5
              kill_cleanup

              if [ -f "$CHECKPOINT_ENDPOINT" ]; then
                  echo "Saving the agent results locally to be passed to S3 later on"
                  curl $CHECKPOINT_ENDPOINT | python3 -m json.tool > $AGENT_RESULTS
              fi

              echo "Finished agent"
              exit 0
          volumeMounts:
            - mountPath: /tmp/agent
              name: efs-shared
              subPath: $$session_id$$/agent
            - mountPath: /workspace/leaderboard
              name: leaderboard-master
            - mountPath: /workspace/scenario_runner
              name: scenario-runner-master
            - mountPath: /workspace/CARLA
              name: carla-root-master
          env:
            - name: OMP_PROC_BIND
              value: "FALSE"
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: "all"
            - name: OMP_NUM_THREADS
              value: "64"
            - name: HTTP_PROXY
              value: ""
            - name: HTTPS_PROXY
              value: ""
            - name: LEADERBOARD_ROOT
              value: "/workspace/leaderboard"
            - name: CARLA_ROOT
              value: "/workspace/CARLA"
            - name: SCENARIO_RUNNER_ROOT
              value: "/workspace/scenario_runner"
            - name: ROUTES
              value: "/workspace/leaderboard/data/routes_testing.xml"
            - name: ROUTES_SUBSET
              value: "0"
            - name: REPETITIONS
              value: "1"
            - name: CHALLENGE_TRACK_CODENAME
              value: "SENSORS"
            - name: CHECKPOINT_ENDPOINT
              value: "/workspace/leaderboard/results.json"
            - name: DEBUG_CHECKPOINT_ENDPOINT
              value: "/workspace/leaderboard/live_results.txt"
            - name: DEBUG_CHALLENGE
              value: "2"
            - name: RECORD_PATH
              value: ""
            - name: RESUME
              value: ""
          resources:
            limits:
              nvidia.com/gpu: 1
      restartPolicy: Never
      volumes:
        - name: leaderboard-master
          emptyDir: {}
        - name: scenario-runner-master
          emptyDir: {}
        - name: carla-root-master
          emptyDir: {}
        - name: efs-shared
          emptyDir: {}
        - name: x11
          hostPath:
            path: /tmp/.X11-unix
  backoffLimit: 0
